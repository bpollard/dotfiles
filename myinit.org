#+STARTUP: overview

* Org Mode
  #+BEGIN_SRC emacs-lisp
  (use-package org
  :ensure t)

  (use-package org-bullets
    :ensure t
    :init
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1))))
  #+END_SRC

* Yasnippet
  #+BEGIN_SRC emacs-lisp
  (use-package yasnippet
    :ensure t
    :config
    (yas-global-mode 1)
  )

  (use-package yasnippet-snippets
    :ensure t
  )
  #+END_SRC

* Which Key
  #+BEGIN_SRC emacs-lisp
  (use-package which-key
    :ensure t
    :config (which-key-mode))
  #+END_SRC

* Magit
  #+BEGIN_SRC emacs-lisp
  (use-package magit
    :ensure t
    :init
    (global-set-key (kbd "C-x g") 'magit-status))
  #+END_SRC

* ELPY
  #+BEGIN_SRC emacs-lisp
  (use-package elpy
    :ensure t
    :init (elpy-enable))

  (use-package pytest
    :ensure t)
  #+END_SRC
* YAML
  #+BEGIN_SRC emacs-lisp
  (use-package yaml-mode
  :ensure t)
  #+END_SRC

  #+RESULTS:

* Ansible
  #+BEGIN_SRC emacs-lisp
  (use-package ansible
  :ensure t
  :config (add-hook 'yaml-mode-hook '(lambda () (ansible 1))))

  (use-package ansible-vault
  :ensure t)

  (use-package company-ansible
  :ensure t)

  (use-package ansible-doc
  :ensure t
  :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))
  #+END_SRC

  #+RESULTS:

* Terraform
  #+BEGIN_SRC emacs-lisp
  (use-package terraform-mode
  :ensure t
  :config
    (terraform-format-on-save-mode t)
    (add-hook 'terraform-mode-hook #'terraform-format-on-save-mode))
  #+END_SRC

* Company
  #+BEGIN_SRC emacs-lisp
  (use-package company
    :ensure t
    :init
    (company-mode t)
    :config
    (progn
      (add-hook 'after-init-hook 'global-company-mode)
      (add-to-list 'company-backends 'company-ansible)
    ))


    (use-package company-terraform
      :ensure t
      :config (company-terraform-init))
  #+END_SRC

* Ace Window
  #+BEGIN_SRC emacs-lisp
  (use-package ace-window
    :ensure t
    :bind ("M-p" . ace-window))
  #+END_SRC

* Nyan Cat
  #+BEGIN_SRC emacs-lisp
  (use-package nyan-mode
    :ensure t
    :config
    (nyan-mode t)
    (nyan-toggle-wavy-trail)
    (nyan-start-animation))
  #+END_SRC

* Beacon
  #+BEGIN_SRC emacs-lisp
  (use-package beacon
    :ensure t
    :config (beacon-mode 1))
  #+END_SRC

* Doom Themes
  #+BEGIN_SRC emacs-lisp
    (use-package doom-themes
    :ensure t
    :config (load-theme 'doom-dracula t)
    :custom
    (doom-dracula-brighter-comments t)
    (doom-dracula-brighter-modeline t)
    (doom-dracula-colorful-headers t)
    (doom-dracula-comment-bg t))
  #+END_SRC

* Flycheck
  #+BEGIN_SRC emacs-lisp
  (use-package flycheck
    :ensure t
    :config (global-flycheck-mode))

    (when (require 'flycheck nil t)
    (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
    (add-hook 'elpy-mode-hook 'flycheck-mode))
  #+END_SRC

* AVY
  #+BEGIN_SRC emacs-lisp
  (use-package avy
    :ensure t
    :bind ("M-s" . avy-goto-char))
  #+END_SRC

* Helm
  
  #+BEGIN_SRC emacs-lisp
  (use-package helm
    :ensure t
    :config
    (progn
      (helm-mode 1)
      (require 'helm-config)
      (global-set-key (kbd "M-x") #'helm-M-x)
      (global-set-key (kbd "C-x C-f") #'helm-find-files)
    ))
  #+END_SRC

* Reveal
  #+begin_src emacs-lisp
  (use-package ox-reveal
  :ensure t)

  (setq org-reveal-root "https://cdn.jsdelivr.net/npm/reveal.js")
  #+end_src

* General emacs configuration
   #+begin_src emacs-lisp
   ;(setq ido-enable-flex-matching t)
   ;(setq ido-everywhere t)
   ;(ido-mode 1)

   (electric-pair-mode 1)
   (show-paren-mode 1)
   (highlight-indentation-mode 1)

   (tool-bar-mode -1)
   (scroll-bar-mode -1)

   (setq display-line-numbers 'relative)
   (global-display-line-numbers-mode t)

   (setq org-agenda-files (list "~/.org/work.org"
                                "~/.org/home.org"))

   (setq backup-directory-alist '(("." . "~/.emacs.d/saves")))
   (setq backup-by-copying t ; Don't delink hardlinks
      delete-old-versions t  ; Clean up the backups
      version-control t      ; Use version numbers on backups,
      kept-new-versions 5    ; keep some new versions
      kept-old-versions 2)   ; and some old ones, too
   #+end_src

   #+RESULTS:
   | ~/.org/work.org | ~/.org/home.org |
